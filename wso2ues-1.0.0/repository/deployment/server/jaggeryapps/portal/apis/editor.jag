<%
var base64 = require('../modules/base64.js');
var br = require('/modules/site-browser.js');
(function () {
    var data, i, length, file, files, nodeOffset,
            log = new Log(),
            pathHash = request.getParameter('pathhash'),
            action = request.getParameter('operation'),
            site = request.getParameter('page'),
            data = request.getParameter('data'),
            mod = require('/modules/site.js');
    if (!require('/modules/user.js').current()) {
        response.sendError(401, 'Unauthorized');
        return;
    }

    if (action === 'get_children') {
        nodeOffset = request.getParameter("nodeOffset");
        files = mod.listFiles(site, path);
        length = files.length;
        data = [];
        log.debug(site);
        log.debug(path);
        log.debug(length);
        for (i = 0; i < length; i++) {
            file = files[i];
            data.push({
                data: file.getName(),
                state: file.isDirectory() ? 'closed' : '',
                attr: {
                    'reg-path': mod.filterPath(site, file.getPath()),
                    'rel': file.isDirectory() ? 'folder' : '',
                    'id': 'node-' + nodeOffset + '-' + i
                }
            });
        }
        if (path === '/') {
            data = {
                "data": "/",
                "attr": {"rel": "folder", "reg-path": ""},
                "state": "open",
                "children": data
            };
        }
        print(data);
        return;
    }
    if (action == 'get_content') {

        var parsed = br.parsePath(br.decode(pathHash));
        var version = request.getParameter('version');
        if(version=='new'){
            parsed.path += '.swp';
        }


        file = mod.loadFile(site, parsed.path);
        file.open('r');

        var r = file.readAll();
        print(r);
        file.close();
        
        return;
    }
     if (action == 'get_path') {

        var parsed = br.parsePath(br.decode(pathHash));
		var r = parsed.site + parsed.path;

        print(r);
     
        return;
    }
    if (action === 'put_collection') {
        mod.createDir(site, path);
        print({
            error: false
        });
        return;
    }
    if (action == 'put_content') {

        var parsed = br.parsePath(br.decode(pathHash));

        if (data) {
            mod.updateFile(site, parsed.path, data);
        } else {
            mod.createFile(site, parsed.path, data);
        }
        mod.removeFile(site, parsed.path + '.swp');
        print({
            error: false
        });
        return;
    }
    if (action == 'del_resource') {
        mod.removeFile(site, path);
        print({
            error: false
        });
        return;
    }
    response.sendError(404, 'Requested action not found');
}());
%>