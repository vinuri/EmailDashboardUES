<%
(function () {
    var target = request.getParameter('target'),
            targets = request.getParameter('targets[]'),
            action = request.getParameter('action'),
            site = request.getParameter('site'),
            cmd = request.getParameter('cmd'),
            name = request.getParameter('name'),
            src = request.getParameter('src'),
            dst = request.getParameter('dst'),
            init = (request.getParameter('init') == '1'),
            cut = request.getParameter('cut'),
            //base64 = require('/modules/base64.js'),
            br = require('/modules/site-browser.js');
    if (!require('/modules/user.js').current()) {
        response.sendError(401, 'Unauthorized');
        return;
    }
    response.contentType = 'application/json';


    if (action === 'checkSite') {
        print({hasSite: br.checkSite(site)});
        return;
    }else  if (action === 'createSite') {
        print({
            id: 'l1_' + br.encodePath(site),
            created: br.createSite(site)
        });
        return;
    }

    if (action === 'browse') {
        //TODO: read entire targets[] to enable removing multiple files/folders
        if (cmd == 'rm') {
            print(br.remove(targets));
            return;
        } else if (!target && !targets) {
            print(br.listSites());
            return;
        } else {
            if (cmd === 'tree') {
                print(br.openTree(target));
                return;
            } else if (cmd == 'mkdir') {
                print(br.mkdir(target, name));
                return;
            } else if (cmd == 'rename') {
                print(br.rename(target, name));
                return;
            } else if (cmd == 'mkfile') {
                print(br.mkfile(target, name));
                return;
            } else if (cmd == 'paste') {
                if(cut == '1')
                    print(br.cut(src, dst, targets));
                else
                    print(br.copy(src, dst, targets));
                return;
            } else if (cmd == 'duplicate') {
                print(br.duplicate(targets));
                return;
            } else if (cmd == 'size') {
                print(br.size(targets));
                return;
            } else {
                if (target != '' && init) {
                    print(br.listFilesForSite(target));
                } else {
                    print(br.listFiles(target));
                }
                return;
            }
        }
    }

    response.sendError(404, 'Request action not found');

}());
%>