<%

var action = request.getParameter('action'),
        JSDiff = require('../modules/diff.js').JsDiff,
        mod = require('/modules/site.js'),
        br = require('/modules/site-browser.js'),
        site = request.getParameter('page'),
        file = null, swapFile = null, text, oldText;

function loadFiles(fileHash) {
    var fileInfo = br.parsePath(br.decode(fileHash));
    file = mod.loadFile(site, fileInfo.path);
    swapFile = mod.loadFile(site, fileInfo.path + '.swp');
}



if (action == 'getStatus') {
    var hash = request.getParameter('pathhash');
    var path = br.decode(hash);
    loadFiles(hash);
    if (swapFile.isExists()) {
        swapFile.open('r');
        oldText = swapFile.readAll();
        swapFile.close();
        file.open('r');
        text = file.readAll();
        file.close();
        print({
            hasVersions: true,
            path:path
        });
    } else {
        print({
            hasVersions: false,
            path:path
        });
    }
}else if (action == 'selectVersion') {
    var hash = request.getParameter('pathhash');
    loadFiles(hash);
    var version = request.getParameter('version');
    if(version=='old'){
        swapFile.del();
    }else if(version=='new'){
        var filePath = file.getPath();
        file.del();
        swapFile.move(filePath);
    }
} else {
    var diff = request.getParameter('diff'),
            start = diff.indexOf(' '),
            fileHash = diff.substr(start, diff.indexOf('\n') - start);
    loadFiles(fileHash);
    if (swapFile.isExists()) {
        swapFile.open('r');
        text = swapFile.readAll();
        swapFile.close();
    } else {
        file.open('r');
        text = file.readAll();
        file.close();
    }
    var result = JSDiff.applyPatch(text, diff);
    if (result === false) {
        print({updated: false});
    } else {
        swapFile.open('w');
        swapFile.write(result);
        swapFile.close();
        print({updated: true});
    }
}
%>
